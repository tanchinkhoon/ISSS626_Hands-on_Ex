---
title: "In-class Exercise 1: Geospatial Data Science with R"
author: "TAN Chin Khoon"
date: "September 13, 2025"
number-sections: true
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# Loading the R packages

## The task

For the purpose of this in-class exercise, the following R packages will be used:
- tidyverse
- sf
- tmap
- ggstatsplot

Write a code chunk to check if these two packages have been installed in R. If yes, load them in R environment.

```{r}
pacman::p_load(tidyverse, sf, tmap, ggstatsplot)

```

# Working with Master Plan Planning Sub-zone Data

## The task
1. Create a sub-folder called data in In-class_Ex01 folder.
2. If necessary visit data.gov.sg and download Master Plan 2014 Subzone Boundary (Web) from the portal. You are required to download both the ESRI shapefile and kml file.
3. Write a code chunk to import Master Plan 2014 Subzone Boundary (Web) in shapefile and kml save them in sf simple features data frame.
4. Write a code chunk to export mpsz14_shp sf data.frame into kml file save the output in data sub-folder. Name the output file MP14_SUBZONE_WEB_PL.

```{r}
# This code chunk imports shapefile
mpsz14_shp <- st_read(dsn = "data/MasterPlan2014SubzoneBoundaryWebSHP",
                layer = "MP14_SUBZONE_WEB_PL")

```

```{r}
# This code chunk imports kml file
mpsz14_kml <- st_read("data/MasterPlan2014SubzoneBoundaryKML.kml")

```

```{r}
# To export mpsz14_shp sf data.frame into kml file save the output in data sub-folder
st_write(mpsz14_shp, 
         "data/MP14_SUBZONE_WEB_PL.kml",
         delete_dsn = TRUE)

```

# Working with Pre-school Location Data

## The task

1. If necessary visit data.gov.sg and download Pre-Schools Location from the portal. You are required to download both the kml and geojson files.
1. Write a code chunk to import Pre-Schools Location in kml geojson save them in sf simple features data frame.

```{r}
## This code chunk imports kml file.
preschool_kml <- st_read("data/PreSchoolsLocation.kml")

```

```{r}
# This code chunk imports geojson file
preschool_geojson <- st_read("data/PreSchoolsLocation.geojson") 

```
# Working with Master Plan 2019 Subzone Boundary Data

## The task

1. Visit data.gov.sg and download Master Plan 2019 Subzone Boundary (No Sea) from the portal. You are required to download both the kml file.
2. Move MPSZ-2019 shapefile provided for In-class Exercise 1 folder on elearn to data sub-folder of In-class_Ex02.
3. Write a code chunk to import Master Plan 2019 Subzone Boundary (No SEA) kml and MPSZ-2019 into sf simple feature data.frame.

```{r}
# To import shapefile
mpsz19_shp <- st_read(dsn = "data/",
                layer = "MPSZ-2019")

```

```{r}
# To import kml file
mpsz19_kml <- st_read("data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml")

```
# Handling Coordinate Systems: Handling Coordinate Systems

## The task
Write a code chunk to check the project of the imported sf objects

```{r}

# st_crs(mpsz19_shp)

```

# Handling Coordinate Systems: Transforming coordinate system

## The task
Re-write the code chunk to import the Master Plan Sub-zone 2019 and Pre-schools Location with proper transformation

```{r}
# To import MPSZ-2019
# mpsz19_shp <- st_read(dsn = "data/",
#                 layer = "MPSZ-2019") %>%
#   st_transform(crs = 3414)

```



```{r}
# To import PreSchoolsLocation.kml
preschool <- st_read("data/PreSchoolsLocation.kml") %>%
  st_transform(crs = 3414)

```
# Geospatial Data Wrangling: Point-in-Polygon Count

## The task

Write a code chunk to count the number of pre-schools in each planning sub-zone.

```{r}
# mpsz19_shp <- mpsz19_shp %>%
#   mutate(`PreSch Count` = lengths(
#     st_intersects(mpsz19_shp, preschool)))

```
# Geospatial Data Wrangling: Computing Density

#The task
Write a single line code to perform the following tasks:
1. Derive the area of each planning sub-zone.
1. Drop the unit of measurement of the area (i.e. m^2)
1. Calculate the density of pre-school at the planning sub-zone level.

```{r}
# mpsz19_shp <- mpsz19_shp %>%
#   mutate(Area = units::drop_units(
#     st_area(.)),
#     `PreSch Density` = `PreSch Count` / Area * 1000000
#   )

```

# Statistical Analysis

## The task
Using appropriate Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA) methods to explore and confirm the statistical relationship between Pre-school Density and Pre-school count.

:::{.callout-tip}

Refer to `ggscatterstats()` of **ggstatsplot** package.

:::

```{r}
# mpsz$`PreSch Density` <- as.numeric(as.character(mpsz19_shp$`PreSch Density`))
# mpsz$`PreSch Count` <- as.numeric(as.character(mpsz19_shp$`PreSch Count`)) 
# mpsz19_shp <- as.data.frame(mpsz19_shp)
# 
# ggscatterstats(data = mpsz19_shp,
#                x = `PreSch Density`,
#                y = `PreSch Count`,
#                type = "parametric")

```

# Working with Population Data

## The task
Visit and extract the latest Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Singstat homepage.

```{r}
popdata <- read_csv("data/respopagesextod2024.csv")

```
# Data Wrangling

## The task
Write a code chunk to prepare a data.frame showing population by Planning Area and Planning subzone

```{r}
popdata2023 <- popdata %>% 
  group_by(PA, SZ, AG) %>% 
  summarise(`POP`=sum(`Pop`)) %>%  
  ungroup() %>% 
  pivot_wider(names_from=AG,
              values_from = POP)

colnames(popdata2023)

```

# Data Processing

## The task

Write a code chunk to derive a tibble data.framewith the following fields PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY where by:

- YOUNG: age group 0 to 4 until age groyup 20 to 24,
- ECONOMY ACTIVE: age group 25-29 until age group 60-64,
- AGED: age group 65 and above,
- TOTAL: all age group, and
- DEPENDENCY: the ratio between young and aged against economy active group.

```{r}
popdata2023 <- popdata2023 %>%
  mutate(YOUNG=rowSums(.[3:6]) # Aged 0 - 24, 10 - 24
         +rowSums(.[14])) %>% # Aged 5 - 9
  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+ # Aged 25 - 59
  rowSums(.[15])) %>%  # Aged 60 -64
  mutate(`AGED`=rowSums(.[16:21])) %>%
  mutate(`TOTAL`=rowSums(.[3:21])) %>%
  mutate(`DEPENDENCY`=(`YOUNG` + `AGED`)
  / `ECONOMY ACTIVE`) %>% 
  select(`PA`, `SZ`, `YOUNG`, 
         `ECONOMY ACTIVE`, `AGED`,
         `TOTAL`, `DEPENDENCY`)

```

# Joining popdata2023 and mpsz19_shp

```{r}
popdata2023 <- popdata2023 %>%
  mutate_at(.vars = vars(PA, SZ), 
          .funs = list(toupper)) 

mpsz_pop2023 <- left_join(mpsz19_shp, popdata2023,
                          by = c("SUBZONE_N" = "SZ"))

pop2023_mpsz <- left_join(popdata2023, mpsz19_shp, 
                          by = c("SZ" = "SUBZONE_N"))

```



```{r}


```



```{r}


```



```{r}


```



```{r}


```



```{r}


```



```{r}


```



```{r}


```



```{r}


```




```{r}


```



```{r}


```



```{r}


```



```{r}


```




```{r}


```




```{r}


```



```{r}


```




```{r}


```




```{r}


```




```{r}


```



```{r}


```




```{r}


```




```{r}


```




```{r}


```




```{r}


```



```{r}


```



```{r}


```




```{r}


```


