{
  "hash": "16dec029321c692a5fb73eaa7b737516",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 1: Geospatial Data Science with R\"\nauthor: \"TAN Chin Khoon\"\ndate: \"September 13, 2025\"\nnumber-sections: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n# Loading the R packages\n\n## The task\n\nFor the purpose of this in-class exercise, the following R packages will be used:\n- tidyverse\n- sf\n- tmap\n- ggstatsplot\n\nWrite a code chunk to check if these two packages have been installed in R. If yes, load them in R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, ggstatsplot)\n```\n:::\n\n\n# Working with Master Plan Planning Sub-zone Data\n\n## The task\n1. Create a sub-folder called data in In-class_Ex01 folder.\n2. If necessary visit data.gov.sg and download Master Plan 2014 Subzone Boundary (Web) from the portal. You are required to download both the ESRI shapefile and kml file.\n3. Write a code chunk to import Master Plan 2014 Subzone Boundary (Web) in shapefile and kml save them in sf simple features data frame.\n4. Write a code chunk to export mpsz14_shp sf data.frame into kml file save the output in data sub-folder. Name the output file MP14_SUBZONE_WEB_PL.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This code chunk imports shapefile\nmpsz14_shp <- st_read(dsn = \"data/MasterPlan2014SubzoneBoundaryWebSHP\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/cktan/Desktop/SMU/01_Geospatial Analytics (ISSS626)/Hands-on_Ex/In-Class_Ex01/data/MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This code chunk imports kml file\n# mpsz14_kml <- st_read(\"data/MasterPlan2014SubzoneBoundaryKML.kml\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To export mpsz14_shp sf data.frame into kml file save the output in data sub-folder\nst_write(mpsz14_shp, \n         \"data/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n\n# Working with Pre-school Location Data\n\n## The task\n\n1. If necessary visit data.gov.sg and download Pre-Schools Location from the portal. You are required to download both the kml and geojson files.\n1. Write a code chunk to import Pre-Schools Location in kml geojson save them in sf simple features data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## This code chunk imports kml file.\npreschool_kml <- st_read(\"data/PreSchoolsLocation.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/cktan/Desktop/SMU/01_Geospatial Analytics (ISSS626)/Hands-on_Ex/In-Class_Ex01/data/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This code chunk imports geojson file\npreschool_geojson <- st_read(\"data/PreSchoolsLocation.geojson\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PreSchoolsLocation' from data source \n  `/Users/cktan/Desktop/SMU/01_Geospatial Analytics (ISSS626)/Hands-on_Ex/In-Class_Ex01/data/PreSchoolsLocation.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n# Working with Master Plan 2019 Subzone Boundary Data\n\n## The task\n\n1. Visit data.gov.sg and download Master Plan 2019 Subzone Boundary (No Sea) from the portal. You are required to download both the kml file.\n2. Move MPSZ-2019 shapefile provided for In-class Exercise 1 folder on elearn to data sub-folder of In-class_Ex02.\n3. Write a code chunk to import Master Plan 2019 Subzone Boundary (No SEA) kml and MPSZ-2019 into sf simple feature data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To import shapefile\n# mpsz19_shp <- st_read(dsn = \"data/\",\n#                 layer = \"MPSZ-2019\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To import kml file\nmpsz19_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/cktan/Desktop/SMU/01_Geospatial Analytics (ISSS626)/Hands-on_Ex/In-Class_Ex01/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n# Handling Coordinate Systems: Handling Coordinate Systems\n\n## The task\nWrite a code chunk to check the project of the imported sf objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# st_crs(mpsz19_shp)\n```\n:::\n\n\n# Handling Coordinate Systems: Transforming coordinate system\n\n## The task\nRe-write the code chunk to import the Master Plan Sub-zone 2019 and Pre-schools Location with proper transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To import MPSZ-2019\n# mpsz19_shp <- st_read(dsn = \"data/\",\n#                 layer = \"MPSZ-2019\") %>%\n#   st_transform(crs = 3414)\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To import PreSchoolsLocation.kml\npreschool <- st_read(\"data/PreSchoolsLocation.kml\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/cktan/Desktop/SMU/01_Geospatial Analytics (ISSS626)/Hands-on_Ex/In-Class_Ex01/data/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n# Geospatial Data Wrangling: Point-in-Polygon Count\n\n## The task\n\nWrite a code chunk to count the number of pre-schools in each planning sub-zone.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mpsz19_shp <- mpsz19_shp %>%\n#   mutate(`PreSch Count` = lengths(\n#     st_intersects(mpsz19_shp, preschool)))\n```\n:::\n\n# Geospatial Data Wrangling: Computing Density\n\n#The task\nWrite a single line code to perform the following tasks:\n1. Derive the area of each planning sub-zone.\n1. Drop the unit of measurement of the area (i.e. m^2)\n1. Calculate the density of pre-school at the planning sub-zone level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mpsz19_shp <- mpsz19_shp %>%\n#   mutate(Area = units::drop_units(\n#     st_area(.)),\n#     `PreSch Density` = `PreSch Count` / Area * 1000000\n#   )\n```\n:::\n\n\n# Statistical Analysis\n\n## The task\nUsing appropriate Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA) methods to explore and confirm the statistical relationship between Pre-school Density and Pre-school count.\n\n:::{.callout-tip}\n\nRefer to `ggscatterstats()` of **ggstatsplot** package.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mpsz$`PreSch Density` <- as.numeric(as.character(mpsz19_shp$`PreSch Density`))\n# mpsz$`PreSch Count` <- as.numeric(as.character(mpsz19_shp$`PreSch Count`)) \n# mpsz19_shp <- as.data.frame(mpsz19_shp)\n# \n# ggscatterstats(data = mpsz19_shp,\n#                x = `PreSch Density`,\n#                y = `PreSch Count`,\n#                type = \"parametric\")\n```\n:::\n\n\n# Working with Population Data\n\n## The task\nVisit and extract the latest Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Singstat homepage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/respopagesextod2024.csv\")\n```\n:::\n\n# Data Wrangling\n\n## The task\nWrite a code chunk to prepare a data.frame showing population by Planning Area and Planning subzone\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata %>% \n  group_by(PA, SZ, AG) %>% \n  summarise(`POP`=sum(`Pop`)) %>%  \n  ungroup() %>% \n  pivot_wider(names_from=AG,\n              values_from = POP)\n\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_over\"\n```\n\n\n:::\n:::\n\n\n# Data Processing\n\n## The task\n\nWrite a code chunk to derive a tibble data.framewith the following fields PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY where by:\n\n- YOUNG: age group 0 to 4 until age groyup 20 to 24,\n- ECONOMY ACTIVE: age group 25-29 until age group 60-64,\n- AGED: age group 65 and above,\n- TOTAL: all age group, and\n- DEPENDENCY: the ratio between young and aged against economy active group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate(YOUNG=rowSums(.[3:6]) # Aged 0 - 24, 10 - 24\n         +rowSums(.[14])) %>% # Aged 5 - 9\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+ # Aged 25 - 59\n  rowSums(.[15])) %>%  # Aged 60 -64\n  mutate(`AGED`=rowSums(.[16:21])) %>%\n  mutate(`TOTAL`=rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY`=(`YOUNG` + `AGED`)\n  / `ECONOMY ACTIVE`) %>% \n  select(`PA`, `SZ`, `YOUNG`, \n         `ECONOMY ACTIVE`, `AGED`,\n         `TOTAL`, `DEPENDENCY`)\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}